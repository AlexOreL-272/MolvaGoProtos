// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v3.12.4
// source: crm.proto

package github.com/AlexOreL-272/ProtoMolva/service_crm

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UserType int32

const (
	UserType_AGENT       UserType = 0
	UserType_DISTRIBUTOR UserType = 1
	UserType_EMPLOYEE    UserType = 2
)

// Enum value maps for UserType.
var (
	UserType_name = map[int32]string{
		0: "AGENT",
		1: "DISTRIBUTOR",
		2: "EMPLOYEE",
	}
	UserType_value = map[string]int32{
		"AGENT":       0,
		"DISTRIBUTOR": 1,
		"EMPLOYEE":    2,
	}
)

func (x UserType) Enum() *UserType {
	p := new(UserType)
	*p = x
	return p
}

func (x UserType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UserType) Descriptor() protoreflect.EnumDescriptor {
	return file_crm_proto_enumTypes[0].Descriptor()
}

func (UserType) Type() protoreflect.EnumType {
	return &file_crm_proto_enumTypes[0]
}

func (x UserType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UserType.Descriptor instead.
func (UserType) EnumDescriptor() ([]byte, []int) {
	return file_crm_proto_rawDescGZIP(), []int{0}
}

type ResponseStatus int32

const (
	ResponseStatus_OK                    ResponseStatus = 0 // Успешно
	ResponseStatus_BAD_REQUEST           ResponseStatus = 1 // Неверный запрос
	ResponseStatus_UNAUTHORIZED          ResponseStatus = 2 // Неавторизован
	ResponseStatus_FORBIDDEN             ResponseStatus = 3 // Запрещено
	ResponseStatus_NOT_FOUND             ResponseStatus = 4 // Не найдено
	ResponseStatus_INTERNAL_SERVER_ERROR ResponseStatus = 5 // Внутренняя ошибка сервера
	ResponseStatus_REQUEST_TIMEOUT       ResponseStatus = 6 // Таймаут запроса
	ResponseStatus_NOT_IMPLEMENTED       ResponseStatus = 7 // Не реализовано
	ResponseStatus_BAD_GATEWAY           ResponseStatus = 8 // Плохой шлюз
	ResponseStatus_SERVICE_UNAVAILABLE   ResponseStatus = 9 // Сервис недоступен
)

// Enum value maps for ResponseStatus.
var (
	ResponseStatus_name = map[int32]string{
		0: "OK",
		1: "BAD_REQUEST",
		2: "UNAUTHORIZED",
		3: "FORBIDDEN",
		4: "NOT_FOUND",
		5: "INTERNAL_SERVER_ERROR",
		6: "REQUEST_TIMEOUT",
		7: "NOT_IMPLEMENTED",
		8: "BAD_GATEWAY",
		9: "SERVICE_UNAVAILABLE",
	}
	ResponseStatus_value = map[string]int32{
		"OK":                    0,
		"BAD_REQUEST":           1,
		"UNAUTHORIZED":          2,
		"FORBIDDEN":             3,
		"NOT_FOUND":             4,
		"INTERNAL_SERVER_ERROR": 5,
		"REQUEST_TIMEOUT":       6,
		"NOT_IMPLEMENTED":       7,
		"BAD_GATEWAY":           8,
		"SERVICE_UNAVAILABLE":   9,
	}
)

func (x ResponseStatus) Enum() *ResponseStatus {
	p := new(ResponseStatus)
	*p = x
	return p
}

func (x ResponseStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ResponseStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_crm_proto_enumTypes[1].Descriptor()
}

func (ResponseStatus) Type() protoreflect.EnumType {
	return &file_crm_proto_enumTypes[1]
}

func (x ResponseStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ResponseStatus.Descriptor instead.
func (ResponseStatus) EnumDescriptor() ([]byte, []int) {
	return file_crm_proto_rawDescGZIP(), []int{1}
}

type VacancyStatus int32

const (
	VacancyStatus_VAC_UNSPECIFIED   VacancyStatus = 0
	VacancyStatus_VAC_CREATED       VacancyStatus = 1
	VacancyStatus_VAC_IN_MODERATION VacancyStatus = 2
	VacancyStatus_VAC_ACCEPTED      VacancyStatus = 3
	VacancyStatus_VAC_DECLINED      VacancyStatus = 4
)

// Enum value maps for VacancyStatus.
var (
	VacancyStatus_name = map[int32]string{
		0: "VAC_UNSPECIFIED",
		1: "VAC_CREATED",
		2: "VAC_IN_MODERATION",
		3: "VAC_ACCEPTED",
		4: "VAC_DECLINED",
	}
	VacancyStatus_value = map[string]int32{
		"VAC_UNSPECIFIED":   0,
		"VAC_CREATED":       1,
		"VAC_IN_MODERATION": 2,
		"VAC_ACCEPTED":      3,
		"VAC_DECLINED":      4,
	}
)

func (x VacancyStatus) Enum() *VacancyStatus {
	p := new(VacancyStatus)
	*p = x
	return p
}

func (x VacancyStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VacancyStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_crm_proto_enumTypes[2].Descriptor()
}

func (VacancyStatus) Type() protoreflect.EnumType {
	return &file_crm_proto_enumTypes[2]
}

func (x VacancyStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use VacancyStatus.Descriptor instead.
func (VacancyStatus) EnumDescriptor() ([]byte, []int) {
	return file_crm_proto_rawDescGZIP(), []int{2}
}

type SubmissionStatus int32

const (
	SubmissionStatus_UNSPECIFIED  SubmissionStatus = 0
	SubmissionStatus_CREATED      SubmissionStatus = 1 // Создано
	SubmissionStatus_IN_PROGRESS  SubmissionStatus = 2 // В процессе
	SubmissionStatus_ON_INTERVIEW SubmissionStatus = 3 // На собеседовании
	SubmissionStatus_DECLINED     SubmissionStatus = 4 // Отклонено
	SubmissionStatus_SUSPENDED    SubmissionStatus = 5 // Приостановлено (как будто удалено)
	SubmissionStatus_ACCEPTED     SubmissionStatus = 6 // Принято
)

// Enum value maps for SubmissionStatus.
var (
	SubmissionStatus_name = map[int32]string{
		0: "UNSPECIFIED",
		1: "CREATED",
		2: "IN_PROGRESS",
		3: "ON_INTERVIEW",
		4: "DECLINED",
		5: "SUSPENDED",
		6: "ACCEPTED",
	}
	SubmissionStatus_value = map[string]int32{
		"UNSPECIFIED":  0,
		"CREATED":      1,
		"IN_PROGRESS":  2,
		"ON_INTERVIEW": 3,
		"DECLINED":     4,
		"SUSPENDED":    5,
		"ACCEPTED":     6,
	}
)

func (x SubmissionStatus) Enum() *SubmissionStatus {
	p := new(SubmissionStatus)
	*p = x
	return p
}

func (x SubmissionStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SubmissionStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_crm_proto_enumTypes[3].Descriptor()
}

func (SubmissionStatus) Type() protoreflect.EnumType {
	return &file_crm_proto_enumTypes[3]
}

func (x SubmissionStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SubmissionStatus.Descriptor instead.
func (SubmissionStatus) EnumDescriptor() ([]byte, []int) {
	return file_crm_proto_rawDescGZIP(), []int{3}
}

// регистрация
// только реквайрд поля.
// Если есть необходимость дополнить текст
// "о себе", или добавить аватарку (даже при регистрации), то пользуйтесь ручкой ChangeUserProfile
type SaveNewUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid          string   `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Name         string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"` // F + I + O or just F + I;
	Phone        string   `protobuf:"bytes,3,opt,name=phone,proto3" json:"phone,omitempty"`
	Email        string   `protobuf:"bytes,4,opt,name=email,proto3" json:"email,omitempty"`
	PasswordHash string   `protobuf:"bytes,5,opt,name=password_hash,json=passwordHash,proto3" json:"password_hash,omitempty"`
	UserType     UserType `protobuf:"varint,6,opt,name=user_type,json=userType,proto3,enum=handlers.api.UserType" json:"user_type,omitempty"`
}

func (x *SaveNewUserRequest) Reset() {
	*x = SaveNewUserRequest{}
	mi := &file_crm_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SaveNewUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveNewUserRequest) ProtoMessage() {}

func (x *SaveNewUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_crm_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveNewUserRequest.ProtoReflect.Descriptor instead.
func (*SaveNewUserRequest) Descriptor() ([]byte, []int) {
	return file_crm_proto_rawDescGZIP(), []int{0}
}

func (x *SaveNewUserRequest) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *SaveNewUserRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SaveNewUserRequest) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *SaveNewUserRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *SaveNewUserRequest) GetPasswordHash() string {
	if x != nil {
		return x.PasswordHash
	}
	return ""
}

func (x *SaveNewUserRequest) GetUserType() UserType {
	if x != nil {
		return x.UserType
	}
	return UserType_AGENT
}

type SaveNewUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status   ResponseStatus `protobuf:"varint,1,opt,name=status,proto3,enum=handlers.api.ResponseStatus" json:"status,omitempty"`
	Response string         `protobuf:"bytes,2,opt,name=response,proto3" json:"response,omitempty"` // описание результата
}

func (x *SaveNewUserResponse) Reset() {
	*x = SaveNewUserResponse{}
	mi := &file_crm_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SaveNewUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveNewUserResponse) ProtoMessage() {}

func (x *SaveNewUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_crm_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveNewUserResponse.ProtoReflect.Descriptor instead.
func (*SaveNewUserResponse) Descriptor() ([]byte, []int) {
	return file_crm_proto_rawDescGZIP(), []int{1}
}

func (x *SaveNewUserResponse) GetStatus() ResponseStatus {
	if x != nil {
		return x.Status
	}
	return ResponseStatus_OK
}

func (x *SaveNewUserResponse) GetResponse() string {
	if x != nil {
		return x.Response
	}
	return ""
}

// авторизация
type CheckUserEmailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email string `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
}

func (x *CheckUserEmailRequest) Reset() {
	*x = CheckUserEmailRequest{}
	mi := &file_crm_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckUserEmailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckUserEmailRequest) ProtoMessage() {}

func (x *CheckUserEmailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_crm_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckUserEmailRequest.ProtoReflect.Descriptor instead.
func (*CheckUserEmailRequest) Descriptor() ([]byte, []int) {
	return file_crm_proto_rawDescGZIP(), []int{2}
}

func (x *CheckUserEmailRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

type CheckUserEmailResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Exists   bool   `protobuf:"varint,1,opt,name=exists,proto3" json:"exists,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *CheckUserEmailResponse) Reset() {
	*x = CheckUserEmailResponse{}
	mi := &file_crm_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckUserEmailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckUserEmailResponse) ProtoMessage() {}

func (x *CheckUserEmailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_crm_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckUserEmailResponse.ProtoReflect.Descriptor instead.
func (*CheckUserEmailResponse) Descriptor() ([]byte, []int) {
	return file_crm_proto_rawDescGZIP(), []int{3}
}

func (x *CheckUserEmailResponse) GetExists() bool {
	if x != nil {
		return x.Exists
	}
	return false
}

func (x *CheckUserEmailResponse) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

// обновить пароль
type ChangeUserPasswordRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid      string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *ChangeUserPasswordRequest) Reset() {
	*x = ChangeUserPasswordRequest{}
	mi := &file_crm_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangeUserPasswordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeUserPasswordRequest) ProtoMessage() {}

func (x *ChangeUserPasswordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_crm_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeUserPasswordRequest.ProtoReflect.Descriptor instead.
func (*ChangeUserPasswordRequest) Descriptor() ([]byte, []int) {
	return file_crm_proto_rawDescGZIP(), []int{4}
}

func (x *ChangeUserPasswordRequest) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *ChangeUserPasswordRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type ChangeUserPasswordResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status   ResponseStatus `protobuf:"varint,1,opt,name=status,proto3,enum=handlers.api.ResponseStatus" json:"status,omitempty"`
	Response string         `protobuf:"bytes,2,opt,name=response,proto3" json:"response,omitempty"` // описание результата
}

func (x *ChangeUserPasswordResponse) Reset() {
	*x = ChangeUserPasswordResponse{}
	mi := &file_crm_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangeUserPasswordResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeUserPasswordResponse) ProtoMessage() {}

func (x *ChangeUserPasswordResponse) ProtoReflect() protoreflect.Message {
	mi := &file_crm_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeUserPasswordResponse.ProtoReflect.Descriptor instead.
func (*ChangeUserPasswordResponse) Descriptor() ([]byte, []int) {
	return file_crm_proto_rawDescGZIP(), []int{5}
}

func (x *ChangeUserPasswordResponse) GetStatus() ResponseStatus {
	if x != nil {
		return x.Status
	}
	return ResponseStatus_OK
}

func (x *ChangeUserPasswordResponse) GetResponse() string {
	if x != nil {
		return x.Response
	}
	return ""
}

// обновить почту
type ChangeUserEmailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid   string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Email string `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
}

func (x *ChangeUserEmailRequest) Reset() {
	*x = ChangeUserEmailRequest{}
	mi := &file_crm_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangeUserEmailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeUserEmailRequest) ProtoMessage() {}

func (x *ChangeUserEmailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_crm_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeUserEmailRequest.ProtoReflect.Descriptor instead.
func (*ChangeUserEmailRequest) Descriptor() ([]byte, []int) {
	return file_crm_proto_rawDescGZIP(), []int{6}
}

func (x *ChangeUserEmailRequest) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *ChangeUserEmailRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

type ChangeUserEmailResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status   ResponseStatus `protobuf:"varint,1,opt,name=status,proto3,enum=handlers.api.ResponseStatus" json:"status,omitempty"`
	Response string         `protobuf:"bytes,2,opt,name=response,proto3" json:"response,omitempty"` // описание результата
}

func (x *ChangeUserEmailResponse) Reset() {
	*x = ChangeUserEmailResponse{}
	mi := &file_crm_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangeUserEmailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeUserEmailResponse) ProtoMessage() {}

func (x *ChangeUserEmailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_crm_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeUserEmailResponse.ProtoReflect.Descriptor instead.
func (*ChangeUserEmailResponse) Descriptor() ([]byte, []int) {
	return file_crm_proto_rawDescGZIP(), []int{7}
}

func (x *ChangeUserEmailResponse) GetStatus() ResponseStatus {
	if x != nil {
		return x.Status
	}
	return ResponseStatus_OK
}

func (x *ChangeUserEmailResponse) GetResponse() string {
	if x != nil {
		return x.Response
	}
	return ""
}

// обновить телефон
type ChangeUserPhoneRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid   string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Phone string `protobuf:"bytes,2,opt,name=phone,proto3" json:"phone,omitempty"`
}

func (x *ChangeUserPhoneRequest) Reset() {
	*x = ChangeUserPhoneRequest{}
	mi := &file_crm_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangeUserPhoneRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeUserPhoneRequest) ProtoMessage() {}

func (x *ChangeUserPhoneRequest) ProtoReflect() protoreflect.Message {
	mi := &file_crm_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeUserPhoneRequest.ProtoReflect.Descriptor instead.
func (*ChangeUserPhoneRequest) Descriptor() ([]byte, []int) {
	return file_crm_proto_rawDescGZIP(), []int{8}
}

func (x *ChangeUserPhoneRequest) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *ChangeUserPhoneRequest) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

type ChangeUserPhoneResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status   ResponseStatus `protobuf:"varint,1,opt,name=status,proto3,enum=handlers.api.ResponseStatus" json:"status,omitempty"`
	Response string         `protobuf:"bytes,2,opt,name=response,proto3" json:"response,omitempty"` // описание результата
}

func (x *ChangeUserPhoneResponse) Reset() {
	*x = ChangeUserPhoneResponse{}
	mi := &file_crm_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangeUserPhoneResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeUserPhoneResponse) ProtoMessage() {}

func (x *ChangeUserPhoneResponse) ProtoReflect() protoreflect.Message {
	mi := &file_crm_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeUserPhoneResponse.ProtoReflect.Descriptor instead.
func (*ChangeUserPhoneResponse) Descriptor() ([]byte, []int) {
	return file_crm_proto_rawDescGZIP(), []int{9}
}

func (x *ChangeUserPhoneResponse) GetStatus() ResponseStatus {
	if x != nil {
		return x.Status
	}
	return ResponseStatus_OK
}

func (x *ChangeUserPhoneResponse) GetResponse() string {
	if x != nil {
		return x.Response
	}
	return ""
}

// обновить профиль
type ChangeUserProfileRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid            string   `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	About          string   `protobuf:"bytes,2,opt,name=about,proto3" json:"about,omitempty"`
	Raiting        float32  `protobuf:"fixed32,3,opt,name=raiting,proto3" json:"raiting,omitempty"`
	Region         string   `protobuf:"bytes,4,opt,name=region,proto3" json:"region,omitempty"`
	AppTheme       string   `protobuf:"bytes,5,opt,name=app_theme,json=appTheme,proto3" json:"app_theme,omitempty"`
	ProfilePicture string   `protobuf:"bytes,6,opt,name=profile_picture,json=profilePicture,proto3" json:"profile_picture,omitempty"`
	Education      []string `protobuf:"bytes,7,rep,name=education,proto3" json:"education,omitempty"`
	Experience     []string `protobuf:"bytes,8,rep,name=experience,proto3" json:"experience,omitempty"`
	Name           string   `protobuf:"bytes,9,opt,name=name,proto3" json:"name,omitempty"` // F + I + O or just F + I;
}

func (x *ChangeUserProfileRequest) Reset() {
	*x = ChangeUserProfileRequest{}
	mi := &file_crm_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangeUserProfileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeUserProfileRequest) ProtoMessage() {}

func (x *ChangeUserProfileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_crm_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeUserProfileRequest.ProtoReflect.Descriptor instead.
func (*ChangeUserProfileRequest) Descriptor() ([]byte, []int) {
	return file_crm_proto_rawDescGZIP(), []int{10}
}

func (x *ChangeUserProfileRequest) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *ChangeUserProfileRequest) GetAbout() string {
	if x != nil {
		return x.About
	}
	return ""
}

func (x *ChangeUserProfileRequest) GetRaiting() float32 {
	if x != nil {
		return x.Raiting
	}
	return 0
}

func (x *ChangeUserProfileRequest) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *ChangeUserProfileRequest) GetAppTheme() string {
	if x != nil {
		return x.AppTheme
	}
	return ""
}

func (x *ChangeUserProfileRequest) GetProfilePicture() string {
	if x != nil {
		return x.ProfilePicture
	}
	return ""
}

func (x *ChangeUserProfileRequest) GetEducation() []string {
	if x != nil {
		return x.Education
	}
	return nil
}

func (x *ChangeUserProfileRequest) GetExperience() []string {
	if x != nil {
		return x.Experience
	}
	return nil
}

func (x *ChangeUserProfileRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type ChangeUserProfileResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status   ResponseStatus `protobuf:"varint,1,opt,name=status,proto3,enum=handlers.api.ResponseStatus" json:"status,omitempty"`
	Response string         `protobuf:"bytes,2,opt,name=response,proto3" json:"response,omitempty"` // описание результата
}

func (x *ChangeUserProfileResponse) Reset() {
	*x = ChangeUserProfileResponse{}
	mi := &file_crm_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangeUserProfileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeUserProfileResponse) ProtoMessage() {}

func (x *ChangeUserProfileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_crm_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeUserProfileResponse.ProtoReflect.Descriptor instead.
func (*ChangeUserProfileResponse) Descriptor() ([]byte, []int) {
	return file_crm_proto_rawDescGZIP(), []int{11}
}

func (x *ChangeUserProfileResponse) GetStatus() ResponseStatus {
	if x != nil {
		return x.Status
	}
	return ResponseStatus_OK
}

func (x *ChangeUserProfileResponse) GetResponse() string {
	if x != nil {
		return x.Response
	}
	return ""
}

// добавить отзыв (на агента или дистрибьютора)
type AddReviewRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid        string  `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	ReviewText string  `protobuf:"bytes,2,opt,name=review_text,json=reviewText,proto3" json:"review_text,omitempty"`
	Raiting    float32 `protobuf:"fixed32,3,opt,name=raiting,proto3" json:"raiting,omitempty"`
}

func (x *AddReviewRequest) Reset() {
	*x = AddReviewRequest{}
	mi := &file_crm_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddReviewRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddReviewRequest) ProtoMessage() {}

func (x *AddReviewRequest) ProtoReflect() protoreflect.Message {
	mi := &file_crm_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddReviewRequest.ProtoReflect.Descriptor instead.
func (*AddReviewRequest) Descriptor() ([]byte, []int) {
	return file_crm_proto_rawDescGZIP(), []int{12}
}

func (x *AddReviewRequest) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *AddReviewRequest) GetReviewText() string {
	if x != nil {
		return x.ReviewText
	}
	return ""
}

func (x *AddReviewRequest) GetRaiting() float32 {
	if x != nil {
		return x.Raiting
	}
	return 0
}

type AddReviewResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status   ResponseStatus `protobuf:"varint,1,opt,name=status,proto3,enum=handlers.api.ResponseStatus" json:"status,omitempty"`
	Response string         `protobuf:"bytes,2,opt,name=response,proto3" json:"response,omitempty"` // описание результата
}

func (x *AddReviewResponse) Reset() {
	*x = AddReviewResponse{}
	mi := &file_crm_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddReviewResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddReviewResponse) ProtoMessage() {}

func (x *AddReviewResponse) ProtoReflect() protoreflect.Message {
	mi := &file_crm_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddReviewResponse.ProtoReflect.Descriptor instead.
func (*AddReviewResponse) Descriptor() ([]byte, []int) {
	return file_crm_proto_rawDescGZIP(), []int{13}
}

func (x *AddReviewResponse) GetStatus() ResponseStatus {
	if x != nil {
		return x.Status
	}
	return ResponseStatus_OK
}

func (x *AddReviewResponse) GetResponse() string {
	if x != nil {
		return x.Response
	}
	return ""
}

// удалить отзыв (доступно только для администрации)
type DeleteReviewRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteReviewRequest) Reset() {
	*x = DeleteReviewRequest{}
	mi := &file_crm_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteReviewRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteReviewRequest) ProtoMessage() {}

func (x *DeleteReviewRequest) ProtoReflect() protoreflect.Message {
	mi := &file_crm_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteReviewRequest.ProtoReflect.Descriptor instead.
func (*DeleteReviewRequest) Descriptor() ([]byte, []int) {
	return file_crm_proto_rawDescGZIP(), []int{14}
}

func (x *DeleteReviewRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteReviewResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status   ResponseStatus `protobuf:"varint,1,opt,name=status,proto3,enum=handlers.api.ResponseStatus" json:"status,omitempty"`
	Response string         `protobuf:"bytes,2,opt,name=response,proto3" json:"response,omitempty"` // описание результата
}

func (x *DeleteReviewResponse) Reset() {
	*x = DeleteReviewResponse{}
	mi := &file_crm_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteReviewResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteReviewResponse) ProtoMessage() {}

func (x *DeleteReviewResponse) ProtoReflect() protoreflect.Message {
	mi := &file_crm_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteReviewResponse.ProtoReflect.Descriptor instead.
func (*DeleteReviewResponse) Descriptor() ([]byte, []int) {
	return file_crm_proto_rawDescGZIP(), []int{15}
}

func (x *DeleteReviewResponse) GetStatus() ResponseStatus {
	if x != nil {
		return x.Status
	}
	return ResponseStatus_OK
}

func (x *DeleteReviewResponse) GetResponse() string {
	if x != nil {
		return x.Response
	}
	return ""
}

type Review struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Text    string  `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
	Raiting float32 `protobuf:"fixed32,3,opt,name=raiting,proto3" json:"raiting,omitempty"`
}

func (x *Review) Reset() {
	*x = Review{}
	mi := &file_crm_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Review) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Review) ProtoMessage() {}

func (x *Review) ProtoReflect() protoreflect.Message {
	mi := &file_crm_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Review.ProtoReflect.Descriptor instead.
func (*Review) Descriptor() ([]byte, []int) {
	return file_crm_proto_rawDescGZIP(), []int{16}
}

func (x *Review) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Review) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *Review) GetRaiting() float32 {
	if x != nil {
		return x.Raiting
	}
	return 0
}

type GetReviewListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
}

func (x *GetReviewListRequest) Reset() {
	*x = GetReviewListRequest{}
	mi := &file_crm_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetReviewListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReviewListRequest) ProtoMessage() {}

func (x *GetReviewListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_crm_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReviewListRequest.ProtoReflect.Descriptor instead.
func (*GetReviewListRequest) Descriptor() ([]byte, []int) {
	return file_crm_proto_rawDescGZIP(), []int{17}
}

func (x *GetReviewListRequest) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

type GetReviewListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReviewList []*Review      `protobuf:"bytes,1,rep,name=review_list,json=reviewList,proto3" json:"review_list,omitempty"`
	Status     ResponseStatus `protobuf:"varint,2,opt,name=status,proto3,enum=handlers.api.ResponseStatus" json:"status,omitempty"`
	Response   string         `protobuf:"bytes,3,opt,name=response,proto3" json:"response,omitempty"` // описание результата
}

func (x *GetReviewListResponse) Reset() {
	*x = GetReviewListResponse{}
	mi := &file_crm_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetReviewListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReviewListResponse) ProtoMessage() {}

func (x *GetReviewListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_crm_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReviewListResponse.ProtoReflect.Descriptor instead.
func (*GetReviewListResponse) Descriptor() ([]byte, []int) {
	return file_crm_proto_rawDescGZIP(), []int{18}
}

func (x *GetReviewListResponse) GetReviewList() []*Review {
	if x != nil {
		return x.ReviewList
	}
	return nil
}

func (x *GetReviewListResponse) GetStatus() ResponseStatus {
	if x != nil {
		return x.Status
	}
	return ResponseStatus_OK
}

func (x *GetReviewListResponse) GetResponse() string {
	if x != nil {
		return x.Response
	}
	return ""
}

// получить информацию о пользователе
type GetUserInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UidOrEmail string `protobuf:"bytes,1,opt,name=uid_or_email,json=uidOrEmail,proto3" json:"uid_or_email,omitempty"`
	IsUid      bool   `protobuf:"varint,2,opt,name=is_uid,json=isUid,proto3" json:"is_uid,omitempty"` // true if uid, false if email
}

func (x *GetUserInfoRequest) Reset() {
	*x = GetUserInfoRequest{}
	mi := &file_crm_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserInfoRequest) ProtoMessage() {}

func (x *GetUserInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_crm_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserInfoRequest.ProtoReflect.Descriptor instead.
func (*GetUserInfoRequest) Descriptor() ([]byte, []int) {
	return file_crm_proto_rawDescGZIP(), []int{19}
}

func (x *GetUserInfoRequest) GetUidOrEmail() string {
	if x != nil {
		return x.UidOrEmail
	}
	return ""
}

func (x *GetUserInfoRequest) GetIsUid() bool {
	if x != nil {
		return x.IsUid
	}
	return false
}

type GetUserInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid            string         `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Email          string         `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	Phone          string         `protobuf:"bytes,3,opt,name=phone,proto3" json:"phone,omitempty"`
	About          string         `protobuf:"bytes,4,opt,name=about,proto3" json:"about,omitempty"`
	Raiting        float32        `protobuf:"fixed32,5,opt,name=raiting,proto3" json:"raiting,omitempty"`
	Region         string         `protobuf:"bytes,6,opt,name=region,proto3" json:"region,omitempty"`
	AppTheme       string         `protobuf:"bytes,7,opt,name=app_theme,json=appTheme,proto3" json:"app_theme,omitempty"`
	ProfilePicture string         `protobuf:"bytes,8,opt,name=profile_picture,json=profilePicture,proto3" json:"profile_picture,omitempty"`
	Education      []string       `protobuf:"bytes,9,rep,name=education,proto3" json:"education,omitempty"`
	Experience     []string       `protobuf:"bytes,10,rep,name=experience,proto3" json:"experience,omitempty"`
	Name           string         `protobuf:"bytes,11,opt,name=name,proto3" json:"name,omitempty"` // F + I + O or just F + I;
	UserType       UserType       `protobuf:"varint,12,opt,name=user_type,json=userType,proto3,enum=handlers.api.UserType" json:"user_type,omitempty"`
	Status         ResponseStatus `protobuf:"varint,13,opt,name=status,proto3,enum=handlers.api.ResponseStatus" json:"status,omitempty"`
	Response       string         `protobuf:"bytes,14,opt,name=response,proto3" json:"response,omitempty"` // описание результата
}

func (x *GetUserInfoResponse) Reset() {
	*x = GetUserInfoResponse{}
	mi := &file_crm_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserInfoResponse) ProtoMessage() {}

func (x *GetUserInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_crm_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserInfoResponse.ProtoReflect.Descriptor instead.
func (*GetUserInfoResponse) Descriptor() ([]byte, []int) {
	return file_crm_proto_rawDescGZIP(), []int{20}
}

func (x *GetUserInfoResponse) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *GetUserInfoResponse) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *GetUserInfoResponse) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *GetUserInfoResponse) GetAbout() string {
	if x != nil {
		return x.About
	}
	return ""
}

func (x *GetUserInfoResponse) GetRaiting() float32 {
	if x != nil {
		return x.Raiting
	}
	return 0
}

func (x *GetUserInfoResponse) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *GetUserInfoResponse) GetAppTheme() string {
	if x != nil {
		return x.AppTheme
	}
	return ""
}

func (x *GetUserInfoResponse) GetProfilePicture() string {
	if x != nil {
		return x.ProfilePicture
	}
	return ""
}

func (x *GetUserInfoResponse) GetEducation() []string {
	if x != nil {
		return x.Education
	}
	return nil
}

func (x *GetUserInfoResponse) GetExperience() []string {
	if x != nil {
		return x.Experience
	}
	return nil
}

func (x *GetUserInfoResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetUserInfoResponse) GetUserType() UserType {
	if x != nil {
		return x.UserType
	}
	return UserType_AGENT
}

func (x *GetUserInfoResponse) GetStatus() ResponseStatus {
	if x != nil {
		return x.Status
	}
	return ResponseStatus_OK
}

func (x *GetUserInfoResponse) GetResponse() string {
	if x != nil {
		return x.Response
	}
	return ""
}

// получить список вакансий
type GetVacancyListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid                     string        `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Id                      string        `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Region                  string        `protobuf:"bytes,3,opt,name=region,proto3" json:"region,omitempty"`
	SalaryBottom            int32         `protobuf:"varint,4,opt,name=salary_bottom,json=salaryBottom,proto3" json:"salary_bottom,omitempty"`
	SalaryTop               int32         `protobuf:"varint,5,opt,name=salary_top,json=salaryTop,proto3" json:"salary_top,omitempty"`
	Mark                    string        `protobuf:"bytes,6,opt,name=mark,proto3" json:"mark,omitempty"`
	IsArchived              bool          `protobuf:"varint,7,opt,name=is_archived,json=isArchived,proto3" json:"is_archived,omitempty"`
	VacancyModerationStatus VacancyStatus `protobuf:"varint,8,opt,name=vacancy_moderation_status,json=vacancyModerationStatus,proto3,enum=handlers.api.VacancyStatus" json:"vacancy_moderation_status,omitempty"`
	Offset                  int32         `protobuf:"varint,9,opt,name=offset,proto3" json:"offset,omitempty"`
	Amount                  int32         `protobuf:"varint,10,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *GetVacancyListRequest) Reset() {
	*x = GetVacancyListRequest{}
	mi := &file_crm_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetVacancyListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVacancyListRequest) ProtoMessage() {}

func (x *GetVacancyListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_crm_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVacancyListRequest.ProtoReflect.Descriptor instead.
func (*GetVacancyListRequest) Descriptor() ([]byte, []int) {
	return file_crm_proto_rawDescGZIP(), []int{21}
}

func (x *GetVacancyListRequest) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *GetVacancyListRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetVacancyListRequest) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *GetVacancyListRequest) GetSalaryBottom() int32 {
	if x != nil {
		return x.SalaryBottom
	}
	return 0
}

func (x *GetVacancyListRequest) GetSalaryTop() int32 {
	if x != nil {
		return x.SalaryTop
	}
	return 0
}

func (x *GetVacancyListRequest) GetMark() string {
	if x != nil {
		return x.Mark
	}
	return ""
}

func (x *GetVacancyListRequest) GetIsArchived() bool {
	if x != nil {
		return x.IsArchived
	}
	return false
}

func (x *GetVacancyListRequest) GetVacancyModerationStatus() VacancyStatus {
	if x != nil {
		return x.VacancyModerationStatus
	}
	return VacancyStatus_VAC_UNSPECIFIED
}

func (x *GetVacancyListRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetVacancyListRequest) GetAmount() int32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type Moderation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status      VacancyStatus `protobuf:"varint,1,opt,name=status,proto3,enum=handlers.api.VacancyStatus" json:"status,omitempty"`
	Description string        `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *Moderation) Reset() {
	*x = Moderation{}
	mi := &file_crm_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Moderation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Moderation) ProtoMessage() {}

func (x *Moderation) ProtoReflect() protoreflect.Message {
	mi := &file_crm_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Moderation.ProtoReflect.Descriptor instead.
func (*Moderation) Descriptor() ([]byte, []int) {
	return file_crm_proto_rawDescGZIP(), []int{22}
}

func (x *Moderation) GetStatus() VacancyStatus {
	if x != nil {
		return x.Status
	}
	return VacancyStatus_VAC_UNSPECIFIED
}

func (x *Moderation) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type Vacancy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               string      `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CompanyId        string      `protobuf:"bytes,2,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
	Name             string      `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Address          string      `protobuf:"bytes,4,opt,name=address,proto3" json:"address,omitempty"`
	WorkFormat       string      `protobuf:"bytes,5,opt,name=work_format,json=workFormat,proto3" json:"work_format,omitempty"`
	AgentReward      int32       `protobuf:"varint,6,opt,name=agent_reward,json=agentReward,proto3" json:"agent_reward,omitempty"`
	Salary           int32       `protobuf:"varint,7,opt,name=salary,proto3" json:"salary,omitempty"`
	Requirements     string      `protobuf:"bytes,8,opt,name=requirements,proto3" json:"requirements,omitempty"`
	Responsibilities string      `protobuf:"bytes,9,opt,name=responsibilities,proto3" json:"responsibilities,omitempty"`
	AdditionalInfo   string      `protobuf:"bytes,10,opt,name=additional_info,json=additionalInfo,proto3" json:"additional_info,omitempty"` // так называемые "плюшки" в мирошке Садовникова
	Region           string      `protobuf:"bytes,11,opt,name=region,proto3" json:"region,omitempty"`                                       // мне кажется это поле логично иметь, чтобы фильтровать по местопололжению (городу), но в бизнес флоу его нет
	Mark             string      `protobuf:"bytes,12,opt,name=mark,proto3" json:"mark,omitempty"`                                           // тег вакансии (психология, it, клининг и т.д.)
	IsArchived       bool        `protobuf:"varint,13,opt,name=is_archived,json=isArchived,proto3" json:"is_archived,omitempty"`
	Moderated        *Moderation `protobuf:"bytes,14,opt,name=moderated,proto3" json:"moderated,omitempty"`
}

func (x *Vacancy) Reset() {
	*x = Vacancy{}
	mi := &file_crm_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Vacancy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Vacancy) ProtoMessage() {}

func (x *Vacancy) ProtoReflect() protoreflect.Message {
	mi := &file_crm_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Vacancy.ProtoReflect.Descriptor instead.
func (*Vacancy) Descriptor() ([]byte, []int) {
	return file_crm_proto_rawDescGZIP(), []int{23}
}

func (x *Vacancy) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Vacancy) GetCompanyId() string {
	if x != nil {
		return x.CompanyId
	}
	return ""
}

func (x *Vacancy) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Vacancy) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *Vacancy) GetWorkFormat() string {
	if x != nil {
		return x.WorkFormat
	}
	return ""
}

func (x *Vacancy) GetAgentReward() int32 {
	if x != nil {
		return x.AgentReward
	}
	return 0
}

func (x *Vacancy) GetSalary() int32 {
	if x != nil {
		return x.Salary
	}
	return 0
}

func (x *Vacancy) GetRequirements() string {
	if x != nil {
		return x.Requirements
	}
	return ""
}

func (x *Vacancy) GetResponsibilities() string {
	if x != nil {
		return x.Responsibilities
	}
	return ""
}

func (x *Vacancy) GetAdditionalInfo() string {
	if x != nil {
		return x.AdditionalInfo
	}
	return ""
}

func (x *Vacancy) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *Vacancy) GetMark() string {
	if x != nil {
		return x.Mark
	}
	return ""
}

func (x *Vacancy) GetIsArchived() bool {
	if x != nil {
		return x.IsArchived
	}
	return false
}

func (x *Vacancy) GetModerated() *Moderation {
	if x != nil {
		return x.Moderated
	}
	return nil
}

type GetVacancyListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VacancyList []*Vacancy `protobuf:"bytes,1,rep,name=vacancy_list,json=vacancyList,proto3" json:"vacancy_list,omitempty"`
}

func (x *GetVacancyListResponse) Reset() {
	*x = GetVacancyListResponse{}
	mi := &file_crm_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetVacancyListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVacancyListResponse) ProtoMessage() {}

func (x *GetVacancyListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_crm_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVacancyListResponse.ProtoReflect.Descriptor instead.
func (*GetVacancyListResponse) Descriptor() ([]byte, []int) {
	return file_crm_proto_rawDescGZIP(), []int{24}
}

func (x *GetVacancyListResponse) GetVacancyList() []*Vacancy {
	if x != nil {
		return x.VacancyList
	}
	return nil
}

// получить список приглашений
type SubmissionGet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid       string           `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	VacancyId string           `protobuf:"bytes,2,opt,name=vacancy_id,json=vacancyId,proto3" json:"vacancy_id,omitempty"`
	Id        string           `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	Status    SubmissionStatus `protobuf:"varint,4,opt,name=status,proto3,enum=handlers.api.SubmissionStatus" json:"status,omitempty"`
	Cv        string           `protobuf:"bytes,5,opt,name=cv,proto3" json:"cv,omitempty"`
	Name      string           `protobuf:"bytes,6,opt,name=name,proto3" json:"name,omitempty"`
	Phone     string           `protobuf:"bytes,7,opt,name=phone,proto3" json:"phone,omitempty"`
	Email     string           `protobuf:"bytes,8,opt,name=email,proto3" json:"email,omitempty"`
	Birthday  string           `protobuf:"bytes,9,opt,name=birthday,proto3" json:"birthday,omitempty"`
	Info      string           `protobuf:"bytes,10,opt,name=info,proto3" json:"info,omitempty"`
}

func (x *SubmissionGet) Reset() {
	*x = SubmissionGet{}
	mi := &file_crm_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubmissionGet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmissionGet) ProtoMessage() {}

func (x *SubmissionGet) ProtoReflect() protoreflect.Message {
	mi := &file_crm_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmissionGet.ProtoReflect.Descriptor instead.
func (*SubmissionGet) Descriptor() ([]byte, []int) {
	return file_crm_proto_rawDescGZIP(), []int{25}
}

func (x *SubmissionGet) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *SubmissionGet) GetVacancyId() string {
	if x != nil {
		return x.VacancyId
	}
	return ""
}

func (x *SubmissionGet) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SubmissionGet) GetStatus() SubmissionStatus {
	if x != nil {
		return x.Status
	}
	return SubmissionStatus_UNSPECIFIED
}

func (x *SubmissionGet) GetCv() string {
	if x != nil {
		return x.Cv
	}
	return ""
}

func (x *SubmissionGet) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SubmissionGet) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *SubmissionGet) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *SubmissionGet) GetBirthday() string {
	if x != nil {
		return x.Birthday
	}
	return ""
}

func (x *SubmissionGet) GetInfo() string {
	if x != nil {
		return x.Info
	}
	return ""
}

type GetSubmissionListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid       string           `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	VacancyId string           `protobuf:"bytes,2,opt,name=vacancy_id,json=vacancyId,proto3" json:"vacancy_id,omitempty"`
	Status    SubmissionStatus `protobuf:"varint,3,opt,name=status,proto3,enum=handlers.api.SubmissionStatus" json:"status,omitempty"`
}

func (x *GetSubmissionListRequest) Reset() {
	*x = GetSubmissionListRequest{}
	mi := &file_crm_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSubmissionListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSubmissionListRequest) ProtoMessage() {}

func (x *GetSubmissionListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_crm_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSubmissionListRequest.ProtoReflect.Descriptor instead.
func (*GetSubmissionListRequest) Descriptor() ([]byte, []int) {
	return file_crm_proto_rawDescGZIP(), []int{26}
}

func (x *GetSubmissionListRequest) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *GetSubmissionListRequest) GetVacancyId() string {
	if x != nil {
		return x.VacancyId
	}
	return ""
}

func (x *GetSubmissionListRequest) GetStatus() SubmissionStatus {
	if x != nil {
		return x.Status
	}
	return SubmissionStatus_UNSPECIFIED
}

type GetSubmissionListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubmissionList []*SubmissionGet `protobuf:"bytes,1,rep,name=submission_list,json=submissionList,proto3" json:"submission_list,omitempty"`
}

func (x *GetSubmissionListResponse) Reset() {
	*x = GetSubmissionListResponse{}
	mi := &file_crm_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSubmissionListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSubmissionListResponse) ProtoMessage() {}

func (x *GetSubmissionListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_crm_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSubmissionListResponse.ProtoReflect.Descriptor instead.
func (*GetSubmissionListResponse) Descriptor() ([]byte, []int) {
	return file_crm_proto_rawDescGZIP(), []int{27}
}

func (x *GetSubmissionListResponse) GetSubmissionList() []*SubmissionGet {
	if x != nil {
		return x.SubmissionList
	}
	return nil
}

type SetSubmissionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid       string           `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	VacancyId string           `protobuf:"bytes,2,opt,name=vacancy_id,json=vacancyId,proto3" json:"vacancy_id,omitempty"`
	Id        string           `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	Status    SubmissionStatus `protobuf:"varint,4,opt,name=status,proto3,enum=handlers.api.SubmissionStatus" json:"status,omitempty"`
	Cv        string           `protobuf:"bytes,5,opt,name=cv,proto3" json:"cv,omitempty"`
	Name      string           `protobuf:"bytes,6,opt,name=name,proto3" json:"name,omitempty"`
	Phone     string           `protobuf:"bytes,7,opt,name=phone,proto3" json:"phone,omitempty"`
	Email     string           `protobuf:"bytes,8,opt,name=email,proto3" json:"email,omitempty"`
	Birthday  string           `protobuf:"bytes,9,opt,name=birthday,proto3" json:"birthday,omitempty"`
	Info      string           `protobuf:"bytes,10,opt,name=info,proto3" json:"info,omitempty"`
}

func (x *SetSubmissionRequest) Reset() {
	*x = SetSubmissionRequest{}
	mi := &file_crm_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetSubmissionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetSubmissionRequest) ProtoMessage() {}

func (x *SetSubmissionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_crm_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetSubmissionRequest.ProtoReflect.Descriptor instead.
func (*SetSubmissionRequest) Descriptor() ([]byte, []int) {
	return file_crm_proto_rawDescGZIP(), []int{28}
}

func (x *SetSubmissionRequest) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *SetSubmissionRequest) GetVacancyId() string {
	if x != nil {
		return x.VacancyId
	}
	return ""
}

func (x *SetSubmissionRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SetSubmissionRequest) GetStatus() SubmissionStatus {
	if x != nil {
		return x.Status
	}
	return SubmissionStatus_UNSPECIFIED
}

func (x *SetSubmissionRequest) GetCv() string {
	if x != nil {
		return x.Cv
	}
	return ""
}

func (x *SetSubmissionRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SetSubmissionRequest) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *SetSubmissionRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *SetSubmissionRequest) GetBirthday() string {
	if x != nil {
		return x.Birthday
	}
	return ""
}

func (x *SetSubmissionRequest) GetInfo() string {
	if x != nil {
		return x.Info
	}
	return ""
}

type SetSubmissionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status   ResponseStatus `protobuf:"varint,1,opt,name=status,proto3,enum=handlers.api.ResponseStatus" json:"status,omitempty"`
	Response string         `protobuf:"bytes,2,opt,name=response,proto3" json:"response,omitempty"` // описание результата
	Id       string         `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *SetSubmissionResponse) Reset() {
	*x = SetSubmissionResponse{}
	mi := &file_crm_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetSubmissionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetSubmissionResponse) ProtoMessage() {}

func (x *SetSubmissionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_crm_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetSubmissionResponse.ProtoReflect.Descriptor instead.
func (*SetSubmissionResponse) Descriptor() ([]byte, []int) {
	return file_crm_proto_rawDescGZIP(), []int{29}
}

func (x *SetSubmissionResponse) GetStatus() ResponseStatus {
	if x != nil {
		return x.Status
	}
	return ResponseStatus_OK
}

func (x *SetSubmissionResponse) GetResponse() string {
	if x != nil {
		return x.Response
	}
	return ""
}

func (x *SetSubmissionResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// if id equals to zero - create vacancy
// if id not empty (not zero) - update vacancy info
type SetVacancyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vacancy *Vacancy `protobuf:"bytes,1,opt,name=vacancy,proto3" json:"vacancy,omitempty"`
}

func (x *SetVacancyRequest) Reset() {
	*x = SetVacancyRequest{}
	mi := &file_crm_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetVacancyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetVacancyRequest) ProtoMessage() {}

func (x *SetVacancyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_crm_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetVacancyRequest.ProtoReflect.Descriptor instead.
func (*SetVacancyRequest) Descriptor() ([]byte, []int) {
	return file_crm_proto_rawDescGZIP(), []int{30}
}

func (x *SetVacancyRequest) GetVacancy() *Vacancy {
	if x != nil {
		return x.Vacancy
	}
	return nil
}

type SetVacancyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status   ResponseStatus `protobuf:"varint,1,opt,name=status,proto3,enum=handlers.api.ResponseStatus" json:"status,omitempty"`
	Response string         `protobuf:"bytes,2,opt,name=response,proto3" json:"response,omitempty"` // описание результата
	Id       string         `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *SetVacancyResponse) Reset() {
	*x = SetVacancyResponse{}
	mi := &file_crm_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetVacancyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetVacancyResponse) ProtoMessage() {}

func (x *SetVacancyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_crm_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetVacancyResponse.ProtoReflect.Descriptor instead.
func (*SetVacancyResponse) Descriptor() ([]byte, []int) {
	return file_crm_proto_rawDescGZIP(), []int{31}
}

func (x *SetVacancyResponse) GetStatus() ResponseStatus {
	if x != nil {
		return x.Status
	}
	return ResponseStatus_OK
}

func (x *SetVacancyResponse) GetResponse() string {
	if x != nil {
		return x.Response
	}
	return ""
}

func (x *SetVacancyResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteVacancyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteVacancyRequest) Reset() {
	*x = DeleteVacancyRequest{}
	mi := &file_crm_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteVacancyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteVacancyRequest) ProtoMessage() {}

func (x *DeleteVacancyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_crm_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteVacancyRequest.ProtoReflect.Descriptor instead.
func (*DeleteVacancyRequest) Descriptor() ([]byte, []int) {
	return file_crm_proto_rawDescGZIP(), []int{32}
}

func (x *DeleteVacancyRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteVacancyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status   ResponseStatus `protobuf:"varint,1,opt,name=status,proto3,enum=handlers.api.ResponseStatus" json:"status,omitempty"`
	Response string         `protobuf:"bytes,2,opt,name=response,proto3" json:"response,omitempty"` // описание результата
}

func (x *DeleteVacancyResponse) Reset() {
	*x = DeleteVacancyResponse{}
	mi := &file_crm_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteVacancyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteVacancyResponse) ProtoMessage() {}

func (x *DeleteVacancyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_crm_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteVacancyResponse.ProtoReflect.Descriptor instead.
func (*DeleteVacancyResponse) Descriptor() ([]byte, []int) {
	return file_crm_proto_rawDescGZIP(), []int{33}
}

func (x *DeleteVacancyResponse) GetStatus() ResponseStatus {
	if x != nil {
		return x.Status
	}
	return ResponseStatus_OK
}

func (x *DeleteVacancyResponse) GetResponse() string {
	if x != nil {
		return x.Response
	}
	return ""
}

type Company struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Uid             string `protobuf:"bytes,2,opt,name=uid,proto3" json:"uid,omitempty"`
	Name            string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	LegalPerson     string `protobuf:"bytes,4,opt,name=legal_person,json=legalPerson,proto3" json:"legal_person,omitempty"`
	Inn             string `protobuf:"bytes,5,opt,name=inn,proto3" json:"inn,omitempty"`
	Description     string `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
	Website         string `protobuf:"bytes,7,opt,name=website,proto3" json:"website,omitempty"`
	PhysicalAddress string `protobuf:"bytes,8,opt,name=physical_address,json=physicalAddress,proto3" json:"physical_address,omitempty"`
	LegalAddress    string `protobuf:"bytes,9,opt,name=legal_address,json=legalAddress,proto3" json:"legal_address,omitempty"`
}

func (x *Company) Reset() {
	*x = Company{}
	mi := &file_crm_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Company) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Company) ProtoMessage() {}

func (x *Company) ProtoReflect() protoreflect.Message {
	mi := &file_crm_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Company.ProtoReflect.Descriptor instead.
func (*Company) Descriptor() ([]byte, []int) {
	return file_crm_proto_rawDescGZIP(), []int{34}
}

func (x *Company) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Company) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *Company) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Company) GetLegalPerson() string {
	if x != nil {
		return x.LegalPerson
	}
	return ""
}

func (x *Company) GetInn() string {
	if x != nil {
		return x.Inn
	}
	return ""
}

func (x *Company) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Company) GetWebsite() string {
	if x != nil {
		return x.Website
	}
	return ""
}

func (x *Company) GetPhysicalAddress() string {
	if x != nil {
		return x.PhysicalAddress
	}
	return ""
}

func (x *Company) GetLegalAddress() string {
	if x != nil {
		return x.LegalAddress
	}
	return ""
}

type GetCompanyListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Id  string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetCompanyListRequest) Reset() {
	*x = GetCompanyListRequest{}
	mi := &file_crm_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCompanyListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCompanyListRequest) ProtoMessage() {}

func (x *GetCompanyListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_crm_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCompanyListRequest.ProtoReflect.Descriptor instead.
func (*GetCompanyListRequest) Descriptor() ([]byte, []int) {
	return file_crm_proto_rawDescGZIP(), []int{35}
}

func (x *GetCompanyListRequest) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *GetCompanyListRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetCompanyListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Company  []*Company `protobuf:"bytes,1,rep,name=company,proto3" json:"company,omitempty"`
	Response string     `protobuf:"bytes,2,opt,name=response,proto3" json:"response,omitempty"`
}

func (x *GetCompanyListResponse) Reset() {
	*x = GetCompanyListResponse{}
	mi := &file_crm_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCompanyListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCompanyListResponse) ProtoMessage() {}

func (x *GetCompanyListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_crm_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCompanyListResponse.ProtoReflect.Descriptor instead.
func (*GetCompanyListResponse) Descriptor() ([]byte, []int) {
	return file_crm_proto_rawDescGZIP(), []int{36}
}

func (x *GetCompanyListResponse) GetCompany() []*Company {
	if x != nil {
		return x.Company
	}
	return nil
}

func (x *GetCompanyListResponse) GetResponse() string {
	if x != nil {
		return x.Response
	}
	return ""
}

// создать и редактировать компанию
// id был передан - редактирует
// id не был, создаёт НОВУЮ
type SetCompanyInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Company *Company `protobuf:"bytes,1,opt,name=company,proto3" json:"company,omitempty"`
}

func (x *SetCompanyInfoRequest) Reset() {
	*x = SetCompanyInfoRequest{}
	mi := &file_crm_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetCompanyInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetCompanyInfoRequest) ProtoMessage() {}

func (x *SetCompanyInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_crm_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetCompanyInfoRequest.ProtoReflect.Descriptor instead.
func (*SetCompanyInfoRequest) Descriptor() ([]byte, []int) {
	return file_crm_proto_rawDescGZIP(), []int{37}
}

func (x *SetCompanyInfoRequest) GetCompany() *Company {
	if x != nil {
		return x.Company
	}
	return nil
}

type SetCompanyInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status   ResponseStatus `protobuf:"varint,1,opt,name=status,proto3,enum=handlers.api.ResponseStatus" json:"status,omitempty"`
	Response string         `protobuf:"bytes,2,opt,name=response,proto3" json:"response,omitempty"`
	Id       string         `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *SetCompanyInfoResponse) Reset() {
	*x = SetCompanyInfoResponse{}
	mi := &file_crm_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetCompanyInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetCompanyInfoResponse) ProtoMessage() {}

func (x *SetCompanyInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_crm_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetCompanyInfoResponse.ProtoReflect.Descriptor instead.
func (*SetCompanyInfoResponse) Descriptor() ([]byte, []int) {
	return file_crm_proto_rawDescGZIP(), []int{38}
}

func (x *SetCompanyInfoResponse) GetStatus() ResponseStatus {
	if x != nil {
		return x.Status
	}
	return ResponseStatus_OK
}

func (x *SetCompanyInfoResponse) GetResponse() string {
	if x != nil {
		return x.Response
	}
	return ""
}

func (x *SetCompanyInfoResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// в копейках
type GetBallanceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
}

func (x *GetBallanceRequest) Reset() {
	*x = GetBallanceRequest{}
	mi := &file_crm_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBallanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBallanceRequest) ProtoMessage() {}

func (x *GetBallanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_crm_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBallanceRequest.ProtoReflect.Descriptor instead.
func (*GetBallanceRequest) Descriptor() ([]byte, []int) {
	return file_crm_proto_rawDescGZIP(), []int{39}
}

func (x *GetBallanceRequest) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

type GetBallanceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Balance  int32  `protobuf:"varint,1,opt,name=balance,proto3" json:"balance,omitempty"`
	Response string `protobuf:"bytes,2,opt,name=response,proto3" json:"response,omitempty"`
}

func (x *GetBallanceResponse) Reset() {
	*x = GetBallanceResponse{}
	mi := &file_crm_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBallanceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBallanceResponse) ProtoMessage() {}

func (x *GetBallanceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_crm_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBallanceResponse.ProtoReflect.Descriptor instead.
func (*GetBallanceResponse) Descriptor() ([]byte, []int) {
	return file_crm_proto_rawDescGZIP(), []int{40}
}

func (x *GetBallanceResponse) GetBalance() int32 {
	if x != nil {
		return x.Balance
	}
	return 0
}

func (x *GetBallanceResponse) GetResponse() string {
	if x != nil {
		return x.Response
	}
	return ""
}

type SetBallanceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid     string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Balance int32  `protobuf:"varint,2,opt,name=balance,proto3" json:"balance,omitempty"` // в копейках
}

func (x *SetBallanceRequest) Reset() {
	*x = SetBallanceRequest{}
	mi := &file_crm_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetBallanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetBallanceRequest) ProtoMessage() {}

func (x *SetBallanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_crm_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetBallanceRequest.ProtoReflect.Descriptor instead.
func (*SetBallanceRequest) Descriptor() ([]byte, []int) {
	return file_crm_proto_rawDescGZIP(), []int{41}
}

func (x *SetBallanceRequest) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *SetBallanceRequest) GetBalance() int32 {
	if x != nil {
		return x.Balance
	}
	return 0
}

type SetBallanceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status   ResponseStatus `protobuf:"varint,1,opt,name=status,proto3,enum=handlers.api.ResponseStatus" json:"status,omitempty"`
	Response string         `protobuf:"bytes,2,opt,name=response,proto3" json:"response,omitempty"`
}

func (x *SetBallanceResponse) Reset() {
	*x = SetBallanceResponse{}
	mi := &file_crm_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetBallanceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetBallanceResponse) ProtoMessage() {}

func (x *SetBallanceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_crm_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetBallanceResponse.ProtoReflect.Descriptor instead.
func (*SetBallanceResponse) Descriptor() ([]byte, []int) {
	return file_crm_proto_rawDescGZIP(), []int{42}
}

func (x *SetBallanceResponse) GetStatus() ResponseStatus {
	if x != nil {
		return x.Status
	}
	return ResponseStatus_OK
}

func (x *SetBallanceResponse) GetResponse() string {
	if x != nil {
		return x.Response
	}
	return ""
}

type Transaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Uid               string `protobuf:"bytes,2,opt,name=uid,proto3" json:"uid,omitempty"`
	Amount            int32  `protobuf:"varint,3,opt,name=amount,proto3" json:"amount,omitempty"`
	TransactionStatus string `protobuf:"bytes,4,opt,name=transaction_status,json=transactionStatus,proto3" json:"transaction_status,omitempty"`
	CreatedAt         string `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt         string `protobuf:"bytes,6,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *Transaction) Reset() {
	*x = Transaction{}
	mi := &file_crm_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Transaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transaction) ProtoMessage() {}

func (x *Transaction) ProtoReflect() protoreflect.Message {
	mi := &file_crm_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transaction.ProtoReflect.Descriptor instead.
func (*Transaction) Descriptor() ([]byte, []int) {
	return file_crm_proto_rawDescGZIP(), []int{43}
}

func (x *Transaction) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Transaction) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *Transaction) GetAmount() int32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *Transaction) GetTransactionStatus() string {
	if x != nil {
		return x.TransactionStatus
	}
	return ""
}

func (x *Transaction) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *Transaction) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type SaveTransactionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Transaction *Transaction `protobuf:"bytes,1,opt,name=transaction,proto3" json:"transaction,omitempty"`
}

func (x *SaveTransactionRequest) Reset() {
	*x = SaveTransactionRequest{}
	mi := &file_crm_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SaveTransactionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveTransactionRequest) ProtoMessage() {}

func (x *SaveTransactionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_crm_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveTransactionRequest.ProtoReflect.Descriptor instead.
func (*SaveTransactionRequest) Descriptor() ([]byte, []int) {
	return file_crm_proto_rawDescGZIP(), []int{44}
}

func (x *SaveTransactionRequest) GetTransaction() *Transaction {
	if x != nil {
		return x.Transaction
	}
	return nil
}

type SaveTransactionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status   ResponseStatus `protobuf:"varint,1,opt,name=status,proto3,enum=handlers.api.ResponseStatus" json:"status,omitempty"`
	Response string         `protobuf:"bytes,2,opt,name=response,proto3" json:"response,omitempty"`
}

func (x *SaveTransactionResponse) Reset() {
	*x = SaveTransactionResponse{}
	mi := &file_crm_proto_msgTypes[45]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SaveTransactionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveTransactionResponse) ProtoMessage() {}

func (x *SaveTransactionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_crm_proto_msgTypes[45]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveTransactionResponse.ProtoReflect.Descriptor instead.
func (*SaveTransactionResponse) Descriptor() ([]byte, []int) {
	return file_crm_proto_rawDescGZIP(), []int{45}
}

func (x *SaveTransactionResponse) GetStatus() ResponseStatus {
	if x != nil {
		return x.Status
	}
	return ResponseStatus_OK
}

func (x *SaveTransactionResponse) GetResponse() string {
	if x != nil {
		return x.Response
	}
	return ""
}

type HelloRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *HelloRequest) Reset() {
	*x = HelloRequest{}
	mi := &file_crm_proto_msgTypes[46]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HelloRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HelloRequest) ProtoMessage() {}

func (x *HelloRequest) ProtoReflect() protoreflect.Message {
	mi := &file_crm_proto_msgTypes[46]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HelloRequest.ProtoReflect.Descriptor instead.
func (*HelloRequest) Descriptor() ([]byte, []int) {
	return file_crm_proto_rawDescGZIP(), []int{46}
}

func (x *HelloRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type HelloResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
}

func (x *HelloResponse) Reset() {
	*x = HelloResponse{}
	mi := &file_crm_proto_msgTypes[47]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HelloResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HelloResponse) ProtoMessage() {}

func (x *HelloResponse) ProtoReflect() protoreflect.Message {
	mi := &file_crm_proto_msgTypes[47]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HelloResponse.ProtoReflect.Descriptor instead.
func (*HelloResponse) Descriptor() ([]byte, []int) {
	return file_crm_proto_rawDescGZIP(), []int{47}
}

func (x *HelloResponse) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

var File_crm_proto protoreflect.FileDescriptor

var file_crm_proto_rawDesc = []byte{
	0x0a, 0x09, 0x63, 0x72, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x68, 0x61, 0x6e,
	0x64, 0x6c, 0x65, 0x72, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x22, 0xc0, 0x01, 0x0a, 0x12, 0x53, 0x61,
	0x76, 0x65, 0x4e, 0x65, 0x77, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x5f, 0x68,
	0x61, 0x73, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x48, 0x61, 0x73, 0x68, 0x12, 0x33, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x68, 0x61, 0x6e,
	0x64, 0x6c, 0x65, 0x72, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x22, 0x67, 0x0a, 0x13,
	0x53, 0x61, 0x76, 0x65, 0x4e, 0x65, 0x77, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x73, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2d, 0x0a, 0x15, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x55, 0x73,
	0x65, 0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x22, 0x4c, 0x0a, 0x16, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x55, 0x73, 0x65,
	0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x65, 0x78, 0x69, 0x73, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06,
	0x65, 0x78, 0x69, 0x73, 0x74, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x22, 0x49, 0x0a, 0x19, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x6e, 0x0a,
	0x1a, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x55, 0x73, 0x65, 0x72, 0x50, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x68, 0x61,
	0x6e, 0x64, 0x6c, 0x65, 0x72, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x40, 0x0a,
	0x16, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x55, 0x73, 0x65, 0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x22,
	0x6b, 0x0a, 0x17, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x55, 0x73, 0x65, 0x72, 0x45, 0x6d, 0x61,
	0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x68, 0x61, 0x6e,
	0x64, 0x6c, 0x65, 0x72, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x40, 0x0a, 0x16,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x55, 0x73, 0x65, 0x72, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x22, 0x6b,
	0x0a, 0x17, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x55, 0x73, 0x65, 0x72, 0x50, 0x68, 0x6f, 0x6e,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x68, 0x61, 0x6e, 0x64,
	0x6c, 0x65, 0x72, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x1a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x8c, 0x02, 0x0a, 0x18,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x62,
	0x6f, 0x75, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x62, 0x6f, 0x75, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x72, 0x61, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x07, 0x72, 0x61, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65,
	0x67, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69,
	0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x70, 0x70, 0x5f, 0x74, 0x68, 0x65, 0x6d, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x70, 0x70, 0x54, 0x68, 0x65, 0x6d, 0x65, 0x12,
	0x27, 0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x70, 0x69, 0x63, 0x74, 0x75,
	0x72, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x64, 0x75, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x65, 0x64, 0x75,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69,
	0x65, 0x6e, 0x63, 0x65, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x65,
	0x72, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x6d, 0x0a, 0x19, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65,
	0x72, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a,
	0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x5f, 0x0a, 0x10, 0x41, 0x64, 0x64,
	0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a,
	0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12,
	0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x54, 0x65, 0x78, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x72, 0x61, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x07, 0x72, 0x61, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x22, 0x65, 0x0a, 0x11, 0x41, 0x64,
	0x64, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x34, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x1c, 0x2e, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x25, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x76, 0x69, 0x65,
	0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x68, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x34, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x1c, 0x2e, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x46, 0x0a, 0x06, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x72, 0x61, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x07, 0x72, 0x61, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x22, 0x28, 0x0a, 0x14, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x75, 0x69, 0x64, 0x22, 0xa0, 0x01, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x52, 0x65, 0x76, 0x69,
	0x65, 0x77, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35,
	0x0a, 0x0b, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x73, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x0a, 0x72, 0x65, 0x76, 0x69, 0x65,
	0x77, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x73,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x4d, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a,
	0x0c, 0x75, 0x69, 0x64, 0x5f, 0x6f, 0x72, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x69, 0x64, 0x4f, 0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12,
	0x15, 0x0a, 0x06, 0x69, 0x73, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x05, 0x69, 0x73, 0x55, 0x69, 0x64, 0x22, 0xba, 0x03, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x61, 0x62, 0x6f, 0x75, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x62, 0x6f,
	0x75, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x61, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x07, 0x72, 0x61, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65,
	0x67, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x70, 0x70, 0x5f, 0x74, 0x68, 0x65, 0x6d,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x70, 0x70, 0x54, 0x68, 0x65, 0x6d,
	0x65, 0x12, 0x27, 0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x70, 0x69, 0x63,
	0x74, 0x75, 0x72, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x64,
	0x75, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x65,
	0x64, 0x75, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x65,
	0x72, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x78,
	0x70, 0x65, 0x72, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x33, 0x0a, 0x09,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x16, 0x2e, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x34, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x1c, 0x2e, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x73, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0xd3, 0x02, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x56, 0x61, 0x63, 0x61, 0x6e,
	0x63, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a,
	0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x61, 0x6c, 0x61, 0x72,
	0x79, 0x5f, 0x62, 0x6f, 0x74, 0x74, 0x6f, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c,
	0x73, 0x61, 0x6c, 0x61, 0x72, 0x79, 0x42, 0x6f, 0x74, 0x74, 0x6f, 0x6d, 0x12, 0x1d, 0x0a, 0x0a,
	0x73, 0x61, 0x6c, 0x61, 0x72, 0x79, 0x5f, 0x74, 0x6f, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x73, 0x61, 0x6c, 0x61, 0x72, 0x79, 0x54, 0x6f, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x6d,
	0x61, 0x72, 0x6b, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6d, 0x61, 0x72, 0x6b, 0x12,
	0x1f, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x64, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x64,
	0x12, 0x57, 0x0a, 0x19, 0x76, 0x61, 0x63, 0x61, 0x6e, 0x63, 0x79, 0x5f, 0x6d, 0x6f, 0x64, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x73, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x56, 0x61, 0x63, 0x61, 0x6e, 0x63, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x17, 0x76, 0x61, 0x63, 0x61, 0x6e, 0x63, 0x79, 0x4d, 0x6f, 0x64, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66,
	0x73, 0x65, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x63, 0x0a, 0x0a, 0x4d, 0x6f, 0x64,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x33, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65,
	0x72, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x56, 0x61, 0x63, 0x61, 0x6e, 0x63, 0x79, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x20, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xc0,
	0x03, 0x0a, 0x07, 0x56, 0x61, 0x63, 0x61, 0x6e, 0x63, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x5f,
	0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x77, 0x6f,
	0x72, 0x6b, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x67, 0x65, 0x6e,
	0x74, 0x5f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b,
	0x61, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x61, 0x6c, 0x61, 0x72, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x61, 0x6c,
	0x61, 0x72, 0x79, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x71, 0x75, 0x69,
	0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x2a, 0x0a, 0x10, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x10, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74,
	0x69, 0x65, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61,
	0x6c, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x61, 0x64,
	0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65,
	0x67, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x61,
	0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69,
	0x73, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x64, 0x12, 0x36, 0x0a, 0x09, 0x6d, 0x6f, 0x64,
	0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x68,
	0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4d, 0x6f, 0x64, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x6d, 0x6f, 0x64, 0x65, 0x72, 0x61, 0x74, 0x65,
	0x64, 0x22, 0x52, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x56, 0x61, 0x63, 0x61, 0x6e, 0x63, 0x79, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x0c, 0x76,
	0x61, 0x63, 0x61, 0x6e, 0x63, 0x79, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x73, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x56, 0x61, 0x63, 0x61, 0x6e, 0x63, 0x79, 0x52, 0x0b, 0x76, 0x61, 0x63, 0x61, 0x6e, 0x63,
	0x79, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x88, 0x02, 0x0a, 0x0d, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x47, 0x65, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x76, 0x61, 0x63,
	0x61, 0x6e, 0x63, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x76,
	0x61, 0x63, 0x61, 0x6e, 0x63, 0x79, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x36, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x68, 0x61, 0x6e, 0x64, 0x6c,
	0x65, 0x72, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x0e, 0x0a, 0x02, 0x63, 0x76, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x63, 0x76,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x12, 0x1a, 0x0a, 0x08, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x12, 0x12, 0x0a, 0x04,
	0x69, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f,
	0x22, 0x83, 0x01, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a,
	0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12,
	0x1d, 0x0a, 0x0a, 0x76, 0x61, 0x63, 0x61, 0x6e, 0x63, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x76, 0x61, 0x63, 0x61, 0x6e, 0x63, 0x79, 0x49, 0x64, 0x12, 0x36,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e,
	0x2e, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x75,
	0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x61, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x0f, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x68,
	0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x75, 0x62, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x47, 0x65, 0x74, 0x52, 0x0e, 0x73, 0x75, 0x62, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x8f, 0x02, 0x0a, 0x14, 0x53, 0x65,
	0x74, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x75, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x76, 0x61, 0x63, 0x61, 0x6e, 0x63, 0x79, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x76, 0x61, 0x63, 0x61, 0x6e, 0x63,
	0x79, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x36, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x73, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x63,
	0x76, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x63, 0x76, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x62,
	0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62,
	0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x79, 0x0a, 0x15, 0x53,
	0x65, 0x74, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x73, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x44, 0x0a, 0x11, 0x53, 0x65, 0x74, 0x56, 0x61, 0x63,
	0x61, 0x6e, 0x63, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x07, 0x76,
	0x61, 0x63, 0x61, 0x6e, 0x63, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x68,
	0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x56, 0x61, 0x63, 0x61,
	0x6e, 0x63, 0x79, 0x52, 0x07, 0x76, 0x61, 0x63, 0x61, 0x6e, 0x63, 0x79, 0x22, 0x76, 0x0a, 0x12,
	0x53, 0x65, 0x74, 0x56, 0x61, 0x63, 0x61, 0x6e, 0x63, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x34, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x73, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x22, 0x26, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x56, 0x61,
	0x63, 0x61, 0x6e, 0x63, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x69, 0x0a, 0x15,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x56, 0x61, 0x63, 0x61, 0x6e, 0x63, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x73,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x80, 0x02, 0x0a, 0x07, 0x43, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6c, 0x65, 0x67,
	0x61, 0x6c, 0x5f, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x6c, 0x65, 0x67, 0x61, 0x6c, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03,
	0x69, 0x6e, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x69, 0x6e, 0x6e, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x18, 0x0a, 0x07, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x70, 0x68,
	0x79, 0x73, 0x69, 0x63, 0x61, 0x6c, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x68, 0x79, 0x73, 0x69, 0x63, 0x61, 0x6c, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x6c, 0x65, 0x67, 0x61, 0x6c, 0x5f, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6c, 0x65,
	0x67, 0x61, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x39, 0x0a, 0x15, 0x47, 0x65,
	0x74, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x65, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x2f, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x48, 0x0a, 0x15,
	0x53, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72,
	0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x52, 0x07, 0x63,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x22, 0x7a, 0x0a, 0x16, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x34, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x1c, 0x2e, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x22, 0x26, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x22, 0x4b, 0x0a, 0x13, 0x47, 0x65,
	0x74, 0x42, 0x61, 0x6c, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x40, 0x0a, 0x12, 0x53, 0x65, 0x74, 0x42, 0x61,
	0x6c, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a,
	0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x22, 0x67, 0x0a, 0x13, 0x53, 0x65, 0x74,
	0x42, 0x61, 0x6c, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x34, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x1c, 0x2e, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0xb4, 0x01, 0x0a, 0x0b, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x75, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2d, 0x0a, 0x12,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x55, 0x0a, 0x16, 0x53, 0x61, 0x76,
	0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x3b, 0x0a, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x68, 0x61, 0x6e, 0x64, 0x6c,
	0x65, 0x72, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0x6b, 0x0a, 0x17, 0x53, 0x61, 0x76, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x68, 0x61,
	0x6e, 0x64, 0x6c, 0x65, 0x72, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x22, 0x0a,
	0x0c, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x22, 0x23, 0x0a, 0x0d, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x2a, 0x34, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x09, 0x0a, 0x05, 0x41, 0x47, 0x45, 0x4e, 0x54, 0x10, 0x00, 0x12, 0x0f, 0x0a,
	0x0b, 0x44, 0x49, 0x53, 0x54, 0x52, 0x49, 0x42, 0x55, 0x54, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0c,
	0x0a, 0x08, 0x45, 0x4d, 0x50, 0x4c, 0x4f, 0x59, 0x45, 0x45, 0x10, 0x02, 0x2a, 0xc8, 0x01, 0x0a,
	0x0e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x06, 0x0a, 0x02, 0x4f, 0x4b, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x42, 0x41, 0x44, 0x5f, 0x52,
	0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x55, 0x4e, 0x41, 0x55,
	0x54, 0x48, 0x4f, 0x52, 0x49, 0x5a, 0x45, 0x44, 0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x46, 0x4f,
	0x52, 0x42, 0x49, 0x44, 0x44, 0x45, 0x4e, 0x10, 0x03, 0x12, 0x0d, 0x0a, 0x09, 0x4e, 0x4f, 0x54,
	0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x04, 0x12, 0x19, 0x0a, 0x15, 0x49, 0x4e, 0x54, 0x45,
	0x52, 0x4e, 0x41, 0x4c, 0x5f, 0x53, 0x45, 0x52, 0x56, 0x45, 0x52, 0x5f, 0x45, 0x52, 0x52, 0x4f,
	0x52, 0x10, 0x05, 0x12, 0x13, 0x0a, 0x0f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x54,
	0x49, 0x4d, 0x45, 0x4f, 0x55, 0x54, 0x10, 0x06, 0x12, 0x13, 0x0a, 0x0f, 0x4e, 0x4f, 0x54, 0x5f,
	0x49, 0x4d, 0x50, 0x4c, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x45, 0x44, 0x10, 0x07, 0x12, 0x0f, 0x0a,
	0x0b, 0x42, 0x41, 0x44, 0x5f, 0x47, 0x41, 0x54, 0x45, 0x57, 0x41, 0x59, 0x10, 0x08, 0x12, 0x17,
	0x0a, 0x13, 0x53, 0x45, 0x52, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x55, 0x4e, 0x41, 0x56, 0x41, 0x49,
	0x4c, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x09, 0x2a, 0x70, 0x0a, 0x0d, 0x56, 0x61, 0x63, 0x61, 0x6e,
	0x63, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x13, 0x0a, 0x0f, 0x56, 0x41, 0x43, 0x5f,
	0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0f, 0x0a,
	0x0b, 0x56, 0x41, 0x43, 0x5f, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x44, 0x10, 0x01, 0x12, 0x15,
	0x0a, 0x11, 0x56, 0x41, 0x43, 0x5f, 0x49, 0x4e, 0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x52, 0x41, 0x54,
	0x49, 0x4f, 0x4e, 0x10, 0x02, 0x12, 0x10, 0x0a, 0x0c, 0x56, 0x41, 0x43, 0x5f, 0x41, 0x43, 0x43,
	0x45, 0x50, 0x54, 0x45, 0x44, 0x10, 0x03, 0x12, 0x10, 0x0a, 0x0c, 0x56, 0x41, 0x43, 0x5f, 0x44,
	0x45, 0x43, 0x4c, 0x49, 0x4e, 0x45, 0x44, 0x10, 0x04, 0x2a, 0x7e, 0x0a, 0x10, 0x53, 0x75, 0x62,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0f, 0x0a,
	0x0b, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0b,
	0x0a, 0x07, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x44, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x49,
	0x4e, 0x5f, 0x50, 0x52, 0x4f, 0x47, 0x52, 0x45, 0x53, 0x53, 0x10, 0x02, 0x12, 0x10, 0x0a, 0x0c,
	0x4f, 0x4e, 0x5f, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x56, 0x49, 0x45, 0x57, 0x10, 0x03, 0x12, 0x0c,
	0x0a, 0x08, 0x44, 0x45, 0x43, 0x4c, 0x49, 0x4e, 0x45, 0x44, 0x10, 0x04, 0x12, 0x0d, 0x0a, 0x09,
	0x53, 0x55, 0x53, 0x50, 0x45, 0x4e, 0x44, 0x45, 0x44, 0x10, 0x05, 0x12, 0x0c, 0x0a, 0x08, 0x41,
	0x43, 0x43, 0x45, 0x50, 0x54, 0x45, 0x44, 0x10, 0x06, 0x32, 0xd7, 0x0f, 0x0a, 0x03, 0x43, 0x72,
	0x6d, 0x12, 0x45, 0x0a, 0x08, 0x53, 0x61, 0x79, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x12, 0x1a, 0x2e,
	0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x48, 0x65, 0x6c,
	0x6c, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x68, 0x61, 0x6e, 0x64,
	0x6c, 0x65, 0x72, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x09, 0x53, 0x61, 0x79, 0x48,
	0x65, 0x6c, 0x6c, 0x6f, 0x32, 0x12, 0x1a, 0x2e, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x73,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1b, 0x2e, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x73, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x54, 0x0a, 0x0b, 0x53, 0x61, 0x76, 0x65, 0x4e, 0x65, 0x77, 0x55, 0x73, 0x65, 0x72, 0x12,
	0x20, 0x2e, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53,
	0x61, 0x76, 0x65, 0x4e, 0x65, 0x77, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x21, 0x2e, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x73, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x53, 0x61, 0x76, 0x65, 0x4e, 0x65, 0x77, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5d, 0x0a, 0x0e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x55,
	0x73, 0x65, 0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x23, 0x2e, 0x68, 0x61, 0x6e, 0x64, 0x6c,
	0x65, 0x72, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x55, 0x73, 0x65,
	0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e,
	0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x69, 0x0a, 0x12, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x27, 0x2e, 0x68, 0x61,
	0x6e, 0x64, 0x6c, 0x65, 0x72, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x73, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x55, 0x73, 0x65, 0x72, 0x50, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x60, 0x0a, 0x0f, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x55, 0x73, 0x65, 0x72, 0x45, 0x6d,
	0x61, 0x69, 0x6c, 0x12, 0x24, 0x2e, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x73, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x55, 0x73, 0x65, 0x72, 0x45, 0x6d, 0x61,
	0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x68, 0x61, 0x6e, 0x64,
	0x6c, 0x65, 0x72, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x60, 0x0a, 0x0f, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x24, 0x2e, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x73,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x55, 0x73, 0x65, 0x72, 0x50,
	0x68, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x68, 0x61,
	0x6e, 0x64, 0x6c, 0x65, 0x72, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x66, 0x0a, 0x11, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x26, 0x2e, 0x68, 0x61, 0x6e, 0x64,
	0x6c, 0x65, 0x72, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x27, 0x2e, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x73, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4e, 0x0a, 0x09,
	0x41, 0x64, 0x64, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x12, 0x1e, 0x2e, 0x68, 0x61, 0x6e, 0x64,
	0x6c, 0x65, 0x72, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x64, 0x64, 0x52, 0x65, 0x76, 0x69,
	0x65, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x68, 0x61, 0x6e, 0x64,
	0x6c, 0x65, 0x72, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x64, 0x64, 0x52, 0x65, 0x76, 0x69,
	0x65, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x57, 0x0a, 0x0c,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x12, 0x21, 0x2e, 0x68,
	0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x22, 0x2e, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5a, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x52, 0x65, 0x76, 0x69,
	0x65, 0x77, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x22, 0x2e, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72,
	0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x68, 0x61, 0x6e,
	0x64, 0x6c, 0x65, 0x72, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x76,
	0x69, 0x65, 0x77, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x54, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x20, 0x2e, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x21, 0x2e, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x73, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5b, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x56, 0x61,
	0x63, 0x61, 0x6e, 0x63, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x23, 0x2e, 0x68, 0x61, 0x6e, 0x64,
	0x6c, 0x65, 0x72, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x61, 0x63, 0x61,
	0x6e, 0x63, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24,
	0x2e, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65,
	0x74, 0x56, 0x61, 0x63, 0x61, 0x6e, 0x63, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x66, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x26, 0x2e, 0x68, 0x61, 0x6e, 0x64,
	0x6c, 0x65, 0x72, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x27, 0x2e, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x73, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5a, 0x0a, 0x0d,
	0x53, 0x65, 0x74, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x2e,
	0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x65, 0x74,
	0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x23, 0x2e, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x73, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x53, 0x65, 0x74, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x51, 0x0a, 0x0a, 0x53, 0x65, 0x74, 0x56,
	0x61, 0x63, 0x61, 0x6e, 0x63, 0x79, 0x12, 0x1f, 0x2e, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72,
	0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x65, 0x74, 0x56, 0x61, 0x63, 0x61, 0x6e, 0x63, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65,
	0x72, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x65, 0x74, 0x56, 0x61, 0x63, 0x61, 0x6e, 0x63,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5a, 0x0a, 0x0d, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x56, 0x61, 0x63, 0x61, 0x6e, 0x63, 0x79, 0x12, 0x22, 0x2e, 0x68,
	0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x56, 0x61, 0x63, 0x61, 0x6e, 0x63, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x23, 0x2e, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x56, 0x61, 0x63, 0x61, 0x6e, 0x63, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5d, 0x0a, 0x0e, 0x53, 0x65, 0x74, 0x43, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x23, 0x2e, 0x68, 0x61, 0x6e, 0x64,
	0x6c, 0x65, 0x72, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24,
	0x2e, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x65,
	0x74, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5d, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x23, 0x2e, 0x68, 0x61, 0x6e, 0x64, 0x6c,
	0x65, 0x72, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e,
	0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74,
	0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x54, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x12, 0x20, 0x2e, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x73, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72,
	0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x54, 0x0a, 0x0b, 0x53,
	0x65, 0x74, 0x42, 0x61, 0x6c, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x20, 0x2e, 0x68, 0x61, 0x6e,
	0x64, 0x6c, 0x65, 0x72, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x65, 0x74, 0x42, 0x61, 0x6c,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x68,
	0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x65, 0x74, 0x42,
	0x61, 0x6c, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x60, 0x0a, 0x0f, 0x53, 0x61, 0x76, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x2e, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x73, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x53, 0x61, 0x76, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x68, 0x61, 0x6e,
	0x64, 0x6c, 0x65, 0x72, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x61, 0x76, 0x65, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x42, 0x0d, 0x5a, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63,
	0x72, 0x6d, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_crm_proto_rawDescOnce sync.Once
	file_crm_proto_rawDescData = file_crm_proto_rawDesc
)

func file_crm_proto_rawDescGZIP() []byte {
	file_crm_proto_rawDescOnce.Do(func() {
		file_crm_proto_rawDescData = protoimpl.X.CompressGZIP(file_crm_proto_rawDescData)
	})
	return file_crm_proto_rawDescData
}

var file_crm_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_crm_proto_msgTypes = make([]protoimpl.MessageInfo, 48)
var file_crm_proto_goTypes = []any{
	(UserType)(0),                      // 0: handlers.api.UserType
	(ResponseStatus)(0),                // 1: handlers.api.ResponseStatus
	(VacancyStatus)(0),                 // 2: handlers.api.VacancyStatus
	(SubmissionStatus)(0),              // 3: handlers.api.SubmissionStatus
	(*SaveNewUserRequest)(nil),         // 4: handlers.api.SaveNewUserRequest
	(*SaveNewUserResponse)(nil),        // 5: handlers.api.SaveNewUserResponse
	(*CheckUserEmailRequest)(nil),      // 6: handlers.api.CheckUserEmailRequest
	(*CheckUserEmailResponse)(nil),     // 7: handlers.api.CheckUserEmailResponse
	(*ChangeUserPasswordRequest)(nil),  // 8: handlers.api.ChangeUserPasswordRequest
	(*ChangeUserPasswordResponse)(nil), // 9: handlers.api.ChangeUserPasswordResponse
	(*ChangeUserEmailRequest)(nil),     // 10: handlers.api.ChangeUserEmailRequest
	(*ChangeUserEmailResponse)(nil),    // 11: handlers.api.ChangeUserEmailResponse
	(*ChangeUserPhoneRequest)(nil),     // 12: handlers.api.ChangeUserPhoneRequest
	(*ChangeUserPhoneResponse)(nil),    // 13: handlers.api.ChangeUserPhoneResponse
	(*ChangeUserProfileRequest)(nil),   // 14: handlers.api.ChangeUserProfileRequest
	(*ChangeUserProfileResponse)(nil),  // 15: handlers.api.ChangeUserProfileResponse
	(*AddReviewRequest)(nil),           // 16: handlers.api.AddReviewRequest
	(*AddReviewResponse)(nil),          // 17: handlers.api.AddReviewResponse
	(*DeleteReviewRequest)(nil),        // 18: handlers.api.DeleteReviewRequest
	(*DeleteReviewResponse)(nil),       // 19: handlers.api.DeleteReviewResponse
	(*Review)(nil),                     // 20: handlers.api.Review
	(*GetReviewListRequest)(nil),       // 21: handlers.api.GetReviewListRequest
	(*GetReviewListResponse)(nil),      // 22: handlers.api.GetReviewListResponse
	(*GetUserInfoRequest)(nil),         // 23: handlers.api.GetUserInfoRequest
	(*GetUserInfoResponse)(nil),        // 24: handlers.api.GetUserInfoResponse
	(*GetVacancyListRequest)(nil),      // 25: handlers.api.GetVacancyListRequest
	(*Moderation)(nil),                 // 26: handlers.api.Moderation
	(*Vacancy)(nil),                    // 27: handlers.api.Vacancy
	(*GetVacancyListResponse)(nil),     // 28: handlers.api.GetVacancyListResponse
	(*SubmissionGet)(nil),              // 29: handlers.api.SubmissionGet
	(*GetSubmissionListRequest)(nil),   // 30: handlers.api.GetSubmissionListRequest
	(*GetSubmissionListResponse)(nil),  // 31: handlers.api.GetSubmissionListResponse
	(*SetSubmissionRequest)(nil),       // 32: handlers.api.SetSubmissionRequest
	(*SetSubmissionResponse)(nil),      // 33: handlers.api.SetSubmissionResponse
	(*SetVacancyRequest)(nil),          // 34: handlers.api.SetVacancyRequest
	(*SetVacancyResponse)(nil),         // 35: handlers.api.SetVacancyResponse
	(*DeleteVacancyRequest)(nil),       // 36: handlers.api.DeleteVacancyRequest
	(*DeleteVacancyResponse)(nil),      // 37: handlers.api.DeleteVacancyResponse
	(*Company)(nil),                    // 38: handlers.api.Company
	(*GetCompanyListRequest)(nil),      // 39: handlers.api.GetCompanyListRequest
	(*GetCompanyListResponse)(nil),     // 40: handlers.api.GetCompanyListResponse
	(*SetCompanyInfoRequest)(nil),      // 41: handlers.api.SetCompanyInfoRequest
	(*SetCompanyInfoResponse)(nil),     // 42: handlers.api.SetCompanyInfoResponse
	(*GetBallanceRequest)(nil),         // 43: handlers.api.GetBallanceRequest
	(*GetBallanceResponse)(nil),        // 44: handlers.api.GetBallanceResponse
	(*SetBallanceRequest)(nil),         // 45: handlers.api.SetBallanceRequest
	(*SetBallanceResponse)(nil),        // 46: handlers.api.SetBallanceResponse
	(*Transaction)(nil),                // 47: handlers.api.Transaction
	(*SaveTransactionRequest)(nil),     // 48: handlers.api.SaveTransactionRequest
	(*SaveTransactionResponse)(nil),    // 49: handlers.api.SaveTransactionResponse
	(*HelloRequest)(nil),               // 50: handlers.api.HelloRequest
	(*HelloResponse)(nil),              // 51: handlers.api.HelloResponse
}
var file_crm_proto_depIdxs = []int32{
	0,  // 0: handlers.api.SaveNewUserRequest.user_type:type_name -> handlers.api.UserType
	1,  // 1: handlers.api.SaveNewUserResponse.status:type_name -> handlers.api.ResponseStatus
	1,  // 2: handlers.api.ChangeUserPasswordResponse.status:type_name -> handlers.api.ResponseStatus
	1,  // 3: handlers.api.ChangeUserEmailResponse.status:type_name -> handlers.api.ResponseStatus
	1,  // 4: handlers.api.ChangeUserPhoneResponse.status:type_name -> handlers.api.ResponseStatus
	1,  // 5: handlers.api.ChangeUserProfileResponse.status:type_name -> handlers.api.ResponseStatus
	1,  // 6: handlers.api.AddReviewResponse.status:type_name -> handlers.api.ResponseStatus
	1,  // 7: handlers.api.DeleteReviewResponse.status:type_name -> handlers.api.ResponseStatus
	20, // 8: handlers.api.GetReviewListResponse.review_list:type_name -> handlers.api.Review
	1,  // 9: handlers.api.GetReviewListResponse.status:type_name -> handlers.api.ResponseStatus
	0,  // 10: handlers.api.GetUserInfoResponse.user_type:type_name -> handlers.api.UserType
	1,  // 11: handlers.api.GetUserInfoResponse.status:type_name -> handlers.api.ResponseStatus
	2,  // 12: handlers.api.GetVacancyListRequest.vacancy_moderation_status:type_name -> handlers.api.VacancyStatus
	2,  // 13: handlers.api.Moderation.status:type_name -> handlers.api.VacancyStatus
	26, // 14: handlers.api.Vacancy.moderated:type_name -> handlers.api.Moderation
	27, // 15: handlers.api.GetVacancyListResponse.vacancy_list:type_name -> handlers.api.Vacancy
	3,  // 16: handlers.api.SubmissionGet.status:type_name -> handlers.api.SubmissionStatus
	3,  // 17: handlers.api.GetSubmissionListRequest.status:type_name -> handlers.api.SubmissionStatus
	29, // 18: handlers.api.GetSubmissionListResponse.submission_list:type_name -> handlers.api.SubmissionGet
	3,  // 19: handlers.api.SetSubmissionRequest.status:type_name -> handlers.api.SubmissionStatus
	1,  // 20: handlers.api.SetSubmissionResponse.status:type_name -> handlers.api.ResponseStatus
	27, // 21: handlers.api.SetVacancyRequest.vacancy:type_name -> handlers.api.Vacancy
	1,  // 22: handlers.api.SetVacancyResponse.status:type_name -> handlers.api.ResponseStatus
	1,  // 23: handlers.api.DeleteVacancyResponse.status:type_name -> handlers.api.ResponseStatus
	38, // 24: handlers.api.GetCompanyListResponse.company:type_name -> handlers.api.Company
	38, // 25: handlers.api.SetCompanyInfoRequest.company:type_name -> handlers.api.Company
	1,  // 26: handlers.api.SetCompanyInfoResponse.status:type_name -> handlers.api.ResponseStatus
	1,  // 27: handlers.api.SetBallanceResponse.status:type_name -> handlers.api.ResponseStatus
	47, // 28: handlers.api.SaveTransactionRequest.transaction:type_name -> handlers.api.Transaction
	1,  // 29: handlers.api.SaveTransactionResponse.status:type_name -> handlers.api.ResponseStatus
	50, // 30: handlers.api.Crm.SayHello:input_type -> handlers.api.HelloRequest
	50, // 31: handlers.api.Crm.SayHello2:input_type -> handlers.api.HelloRequest
	4,  // 32: handlers.api.Crm.SaveNewUser:input_type -> handlers.api.SaveNewUserRequest
	6,  // 33: handlers.api.Crm.CheckUserEmail:input_type -> handlers.api.CheckUserEmailRequest
	8,  // 34: handlers.api.Crm.ChangeUserPassword:input_type -> handlers.api.ChangeUserPasswordRequest
	10, // 35: handlers.api.Crm.ChangeUserEmail:input_type -> handlers.api.ChangeUserEmailRequest
	12, // 36: handlers.api.Crm.ChangeUserPhone:input_type -> handlers.api.ChangeUserPhoneRequest
	14, // 37: handlers.api.Crm.ChangeUserProfile:input_type -> handlers.api.ChangeUserProfileRequest
	16, // 38: handlers.api.Crm.AddReview:input_type -> handlers.api.AddReviewRequest
	18, // 39: handlers.api.Crm.DeleteReview:input_type -> handlers.api.DeleteReviewRequest
	21, // 40: handlers.api.Crm.GetReviewList:input_type -> handlers.api.GetReviewListRequest
	23, // 41: handlers.api.Crm.GetUserInfo:input_type -> handlers.api.GetUserInfoRequest
	25, // 42: handlers.api.Crm.GetVacancyList:input_type -> handlers.api.GetVacancyListRequest
	30, // 43: handlers.api.Crm.GetSubmissionList:input_type -> handlers.api.GetSubmissionListRequest
	32, // 44: handlers.api.Crm.SetSubmission:input_type -> handlers.api.SetSubmissionRequest
	34, // 45: handlers.api.Crm.SetVacancy:input_type -> handlers.api.SetVacancyRequest
	36, // 46: handlers.api.Crm.DeleteVacancy:input_type -> handlers.api.DeleteVacancyRequest
	41, // 47: handlers.api.Crm.SetCompanyInfo:input_type -> handlers.api.SetCompanyInfoRequest
	39, // 48: handlers.api.Crm.GetCompanyList:input_type -> handlers.api.GetCompanyListRequest
	43, // 49: handlers.api.Crm.GetBallance:input_type -> handlers.api.GetBallanceRequest
	45, // 50: handlers.api.Crm.SetBallance:input_type -> handlers.api.SetBallanceRequest
	48, // 51: handlers.api.Crm.SaveTransaction:input_type -> handlers.api.SaveTransactionRequest
	51, // 52: handlers.api.Crm.SayHello:output_type -> handlers.api.HelloResponse
	51, // 53: handlers.api.Crm.SayHello2:output_type -> handlers.api.HelloResponse
	5,  // 54: handlers.api.Crm.SaveNewUser:output_type -> handlers.api.SaveNewUserResponse
	7,  // 55: handlers.api.Crm.CheckUserEmail:output_type -> handlers.api.CheckUserEmailResponse
	9,  // 56: handlers.api.Crm.ChangeUserPassword:output_type -> handlers.api.ChangeUserPasswordResponse
	11, // 57: handlers.api.Crm.ChangeUserEmail:output_type -> handlers.api.ChangeUserEmailResponse
	13, // 58: handlers.api.Crm.ChangeUserPhone:output_type -> handlers.api.ChangeUserPhoneResponse
	15, // 59: handlers.api.Crm.ChangeUserProfile:output_type -> handlers.api.ChangeUserProfileResponse
	17, // 60: handlers.api.Crm.AddReview:output_type -> handlers.api.AddReviewResponse
	19, // 61: handlers.api.Crm.DeleteReview:output_type -> handlers.api.DeleteReviewResponse
	22, // 62: handlers.api.Crm.GetReviewList:output_type -> handlers.api.GetReviewListResponse
	24, // 63: handlers.api.Crm.GetUserInfo:output_type -> handlers.api.GetUserInfoResponse
	28, // 64: handlers.api.Crm.GetVacancyList:output_type -> handlers.api.GetVacancyListResponse
	31, // 65: handlers.api.Crm.GetSubmissionList:output_type -> handlers.api.GetSubmissionListResponse
	33, // 66: handlers.api.Crm.SetSubmission:output_type -> handlers.api.SetSubmissionResponse
	35, // 67: handlers.api.Crm.SetVacancy:output_type -> handlers.api.SetVacancyResponse
	37, // 68: handlers.api.Crm.DeleteVacancy:output_type -> handlers.api.DeleteVacancyResponse
	42, // 69: handlers.api.Crm.SetCompanyInfo:output_type -> handlers.api.SetCompanyInfoResponse
	40, // 70: handlers.api.Crm.GetCompanyList:output_type -> handlers.api.GetCompanyListResponse
	44, // 71: handlers.api.Crm.GetBallance:output_type -> handlers.api.GetBallanceResponse
	46, // 72: handlers.api.Crm.SetBallance:output_type -> handlers.api.SetBallanceResponse
	49, // 73: handlers.api.Crm.SaveTransaction:output_type -> handlers.api.SaveTransactionResponse
	52, // [52:74] is the sub-list for method output_type
	30, // [30:52] is the sub-list for method input_type
	30, // [30:30] is the sub-list for extension type_name
	30, // [30:30] is the sub-list for extension extendee
	0,  // [0:30] is the sub-list for field type_name
}

func init() { file_crm_proto_init() }
func file_crm_proto_init() {
	if File_crm_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_crm_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   48,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_crm_proto_goTypes,
		DependencyIndexes: file_crm_proto_depIdxs,
		EnumInfos:         file_crm_proto_enumTypes,
		MessageInfos:      file_crm_proto_msgTypes,
	}.Build()
	File_crm_proto = out.File
	file_crm_proto_rawDesc = nil
	file_crm_proto_goTypes = nil
	file_crm_proto_depIdxs = nil
}
